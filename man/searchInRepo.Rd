% Generated by roxygen2 (4.0.1): do not edit by hand
\name{searchInLocalRepo}
\alias{searchInGithubRepo}
\alias{searchInLocalRepo}
\title{Search for an Object in a Repository Using \code{Tags}}
\usage{
searchInLocalRepo(tag, dir)

searchInGithubRepo(tag, repo, user, branch = "master")
}
\arguments{
\item{tag}{A character denoting a Tag to be searched for in the Repository. It is also possible to specify \code{tag} as a list of length 2 with \code{dataFrom} and \code{dataTo}; see details.}

\item{dir}{A character denoting an existing directory in which objects will be searched.}

\item{repo}{Only if working with a Github repository. A character containing a name of a Github repository on which the Repository is archived.}

\item{user}{Only if working with a Github repository. A character containing a name of a Github user on whose account the \code{repo} is created.}

\item{branch}{Only if working with a Github repository. A character containing a name of
Github repository's branch in which Repository is archived. Default \code{branch} is \code{master}.}
}
\value{
\code{searchInRepo} returns a \code{md5hash} character, which is a hash assigned to the object when
saving it to the Repository by using the \link{saveToRepo} function. If the object
is not in the Repository a logical value \code{FALSE} is returned.
}
\description{
\code{searchInRepo} searches for an object in a \link{Repository} using it's \link{Tags}.
}
\details{
\code{searchInRepo} searches for an object in a Repository using it's \code{Tag}
(e.g., \code{name}, \code{class} or \code{archiving date}).
For various object classes different \code{Tags} can be searched for.
See \link{Tags}. If a \code{Tag} is a list of length 2, \code{md5hashes} of all
objects created from date \code{dateFrom} to data \code{dateTo} are returned. The date
should be formatted according to the YYYY-MM-DD format, e.g., \code{"2014-07-31"}.

\code{Tags} should be given according to the format: \code{"TagType:TagTypeValue"} - see examples.
}
\examples{
# objects preparation

# data.frame object
data(iris)

# ggplot/gg object
library(ggplot2)
df <- data.frame(gp = factor(rep(letters[1:3], each = 10)),y = rnorm(30))
library(plyr)
ds <- ddply(df, .(gp), summarise, mean = mean(y), sd = sd(y))
myplot123 <- ggplot(df, aes(x = gp, y = y)) +
  geom_point() +  geom_point(data = ds, aes(y = mean),
               colour = 'red', size = 3)

# lm object
model <- lm(Sepal.Length~ Sepal.Width + Petal.Length + Petal.Width, data= iris)

# agnes (twins) object
library(cluster)
data(votes.repub)
agn1 <- agnes(votes.repub, metric = "manhattan", stand = TRUE)

# fanny (partition) object
x <- rbind(cbind(rnorm(10, 0, 0.5), rnorm(10, 0, 0.5)),
         cbind(rnorm(15, 5, 0.5), rnorm(15, 5, 0.5)),
          cbind(rnorm( 3,3.2,0.5), rnorm( 3,3.2,0.5)))
fannyx <- fanny(x, 2)

# creating example Repository - that examples will work

exampleDir <- tempdir()
createEmptyRepo(dir = exampleDir)
saveToRepo(myplot123, dir=exampleDir)
saveToRepo(iris, dir=exampleDir)
saveToRepo(model, dir=exampleDir)
saveToRepo(agn1, dir=exampleDir)
saveToRepo(fannyx, dir=exampleDir)

# let's see how the Repository look like: summary

summaryLocalRepo(method = "md5hashes", dir = exampleDir)
summaryLocalRepo(method = "tags", dir = exampleDir)

# search examples

# tag search
searchInLocalRepo( "class:ggplot", dir = exampleDir )
searchInLocalRepo( "name:myplot123", dir = exampleDir )
searchInLocalRepo( "varname:Sepal.Width", dir = exampleDir )
searchInLocalRepo( "class:lm", dir = exampleDir )
searchInLocalRepo( "coefname:Petal.Length", dir = exampleDir )
searchInLocalRepo( "ac:07977555", dir = exampleDir )

# Github version
summaryGithubRepo( user="pbiecek", repo="archivist" )
searchInGithubRepo( "varname:Sepal.Width", user="pbiecek", repo="archivist" )
searchInGithubRepo( "class:lm", user="pbiecek", repo="archivist", branch="master" )
searchInGithubRepo( "date:2014-08-17 13:44:47", user="pbiecek", repo="archivist" )

# date search

# objects archivised between 2 different days
searchInLocalRepo( tag = list( dateFrom = Sys.Date()-1, dateTo = Sys.Date()+1),
dir = exampleDir )

# also on Github

searchInGithubRepo( tag = list( dateFrom = "2014-08-16", dateTo = "2014-08-18" ),
user="pbiecek", repo="archivist", branch="master" )


# objects from Today
searchInLocalRepo( tag = list( dateFrom=Sys.Date(), dateTo=Sys.Date() ),
dir = exampleDir )

# removing all files generated to this function's examples
x <- list.files( paste0( exampleDir, "/gallery/" ) )
sapply( x , function(x ){
     file.remove( paste0( exampleDir, "/gallery/", x ) )
   })
file.remove( paste0( exampleDir, "/backpack.db" ) )

rm( exampleDir )
}
\author{
Marcin Kosinski, \email{m.p.kosinski@gmail.com}
}
\seealso{
Other archivist: \code{\link{Repository}};
  \code{\link{Tags}}; \code{\link{archivist-package}};
  \code{\link{createEmptyRepo}};
  \code{\link{loadFromGithubRepo}},
  \code{\link{loadFromLocalRepo}}; \code{\link{md5hash}};
  \code{\link{rmFromRepo}}; \code{\link{saveToRepo}};
  \code{\link{summaryGithubRepo}},
  \code{\link{summaryLocalRepo}}
}

