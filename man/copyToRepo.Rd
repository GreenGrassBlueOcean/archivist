% Generated by roxygen2 (4.0.1): do not edit by hand
\name{copyLocalRepo}
\alias{copyGithubRepo}
\alias{copyLocalRepo}
\title{Copy an Existing Repository to Another Repository}
\usage{
copyLocalRepo(repoFrom, repoTo, md5hashes)

copyGithubRepo(repoTo, md5hashes, user, repo, branch = "master")
}
\arguments{
\item{repoFrom}{A character that specifies the directory of the Repository from which
artifacts will be copied. Works only on \code{copyLocalRepo}.}

\item{repoTo}{A character that specifies the directory of the Repository in which
artifacts will be copied.}

\item{md5hashes}{A character or character vector containing \code{md5hashes} of artifacts to be copied.}

\item{repo}{Only if coping a Github repository. A character containing a name of a Github repository on which the \code{repoFrom}-Repository is archived.}

\item{user}{Only if coping a Github repository. A character containing a name of a Github user on whose account the \code{repoFrom} is created.}

\item{branch}{Only if coping with a Github repository. A character containing a name of
Github Repository's branch on which a \code{repoFrom}-Repository is archived. Default \code{branch} is \code{master}.}
}
\description{
\code{copyToRepo} copies artifact from one \link{Repository} to another \code{Repository}.
}
\details{
\code{copyToRepo} copies artifact from one \code{Repository} to another \code{Repository}. It addes new files
to exising \code{gallery} folder in \code{repoTo} \code{Repository}. \code{copyLocalRepo} copies local \code{Repository}, where
\code{copyGithubRepo} copies Github \code{Repository}.
}
\examples{
# objects preparation
\dontrun{
# data.frame object
data(iris)

# ggplot/gg object
library(ggplot2)
df <- data.frame(gp = factor(rep(letters[1:3], each = 10)),y = rnorm(30))
library(plyr)
ds <- ddply(df, .(gp), summarise, mean = mean(y), sd = sd(y))
myplot123 <- ggplot(df, aes(x = gp, y = y)) +
  geom_point() +  geom_point(data = ds, aes(y = mean),
               colour = 'red', size = 3)

# lm object
model <- lm(Sepal.Length~ Sepal.Width + Petal.Length + Petal.Width, data= iris)

# agnes (twins) object
library(cluster)
data(votes.repub)
agn1 <- agnes(votes.repub, metric = "manhattan", stand = TRUE)

# fanny (partition) object
x <- rbind(cbind(rnorm(10, 0, 0.5), rnorm(10, 0, 0.5)),
         cbind(rnorm(15, 5, 0.5), rnorm(15, 5, 0.5)),
          cbind(rnorm( 3,3.2,0.5), rnorm( 3,3.2,0.5)))
fannyx <- fanny(x, 2)

# lda object
library(MASS)

Iris <- data.frame(rbind(iris3[,,1], iris3[,,2], iris3[,,3]),
                  Sp = rep(c("s","c","v"), rep(50,3)))
train <- c(8,83,115,118,146,82,76,9,70,139,85,59,78,143,68,
           134,148,12,141,101,144,114,41,95,61,128,2,42,37,
           29,77,20,44,98,74,32,27,11,49,52,111,55,48,33,38,
           113,126,24,104,3,66,81,31,39,26,123,18,108,73,50,
           56,54,65,135,84,112,131,60,102,14,120,117,53,138,5)
lda1 <- lda(Sp ~ ., Iris, prior = c(1,1,1)/3, subset = train)

# qda object
tr <- c(7,38,47,43,20,37,44,22,46,49,50,19,4,32,12,29,27,34,2,1,17,13,3,35,36)
train <- rbind(iris3[tr,,1], iris3[tr,,2], iris3[tr,,3])
cl <- factor(c(rep("s",25), rep("c",25), rep("v",25)))
qda1 <- qda(train, cl)

# glmnet object
library( glmnet )

zk=matrix(rnorm(100*20),100,20)
bk=rnorm(100)
glmnet1=glmnet(zk,bk)


# creating example Repository - that examples will work

TODO ADD EXAMPLES

}
}
\author{
Marcin Kosinski, \email{m.p.kosinski@gmail.com}
}
\seealso{
Other archivist: \code{\link{Repository}};
  \code{\link{Tags}}; \code{\link{archivist-package}};
  \code{\link{createEmptyRepo}}; \code{\link{deleteRepo}};
  \code{\link{infoGithubRepo}},
  \code{\link{infoLocalRepo}};
  \code{\link{loadFromGithubRepo}},
  \code{\link{loadFromLocalRepo}}; \code{\link{md5hash}};
  \code{\link{rmFromRepo}}; \code{\link{saveToRepo}};
  \code{\link{searchInGithubRepo}},
  \code{\link{searchInLocalRepo}};
  \code{\link{summaryGithubRepo}},
  \code{\link{summaryLocalRepo}}
}

