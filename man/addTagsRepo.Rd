% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addTagsRepo.R
\name{addTagsRepo}
\alias{addTagsRepo}
\title{Add new Tags to the Existing Repository}
\usage{
addTagsRepo(md5hashes, repoDir = NULL, FUN = NULL, tags = NULL, ...)
}
\arguments{
\item{md5hashes}{a character vector of \code{md5hashes} specifying to which
corresponding artifacts new \code{Tags} should be added. See \code{Note} 
to get to know about the length of \code{tags} and \code{md5hashes} parameters.}

\item{repoDir}{A character that specifies the directory of the Repository to which
new \code{Tags} will be added. If it is set to \code{NULL} (by default),
it uses the \code{repoDir} specified in \link{setLocalRepo}.}

\item{FUN}{A function which is evaluated on the artifacts for which \code{md5hashes}
are given. The result of this function evaluation are \code{Tags} which will
be added to the local Repository.}

\item{tags}{A character vector which specifies what kind of tags should be added to
artifacts corresponding to given \code{md5hashes}. See \code{Note} to get to know about
the length of \code{tags} and \code{md5hashes} parameters.
One can specify either \code{FUN} or \code{tags}.}

\item{...}{Other arguments that will be passed to FUN.}
}
\description{
\code{addTagsRepo} adds new \link{Tags} to the existing \link{Repository}.
}
\details{
\code{addTagsRepo} function adds new tags to artifacts that are already stored
in the repository. One can add new \code{tags} either explicitly with \code{tags} argument
or by passing a function which extracts \code{tags} from selected artifacts
corresponding to \code{md5hashes}. To learn more about artifacts visit
\link[archivist]{archivist-package}.
}
\note{
One should remember that \code{length(tags)} modulo \code{length(md5hashes)} 
must be equal to 0 or \code{length(md5hashes)} modulo \code{length(tags)}
must be equal to 0.
}
\examples{
\dontrun{

# Takes all objects of lm class from repository, 
# extracts R2 for them and stores as R2: tags

exampleRepoDir <- tempfile()
createEmptyRepo(exampleRepoDir, force=TRUE)
m1 <- lm(Sepal.Length~Species, iris)
saveToRepo(m1, exampleRepoDir)
m1 <- lm(Sepal.Width~Species, iris)
saveToRepo(m1, exampleRepoDir)
getTagsLocal("da1bcaf68752c146903f700c1a458438", exampleRepoDir, "")
md5hashes <- searchInLocalRepo(repoDir=exampleRepoDir, "class:lm")
addTagsRepo(md5hashes, exampleRepoDir, tags = "test")
addTagsRepo(md5hashes, exampleRepoDir, function(x) paste0("R2:",summary(x)$r.square))
getTagsLocal("da1bcaf68752c146903f700c1a458438", exampleRepoDir, "")
showLocalRepo(exampleRepoDir)
deleteRepo(exampleRepoDir, deleteRoot=TRUE)
}

}
\author{
Marcin Kosinski, \email{m.p.kosinski@gmail.com}, 
Przemyslaw Biecek, \email{przemyslaw.biecek@gmail.com}
}
\seealso{
Other archivist: \code{\link{Repository}},
  \code{\link{Tags}}, \code{\link{\%a\%}},
  \code{\link{ahistory}}, \code{\link{aoptions}},
  \code{\link{archive}},
  \code{\link{archivist-github-integration}},
  \code{\link{archivist-package}}, \code{\link{aread}},
  \code{\link{asearch}}, \code{\link{cache}},
  \code{\link{cloneGithubRepo}},
  \code{\link{copyLocalRepo}},
  \code{\link{createEmptyRepo}}, \code{\link{deleteRepo}},
  \code{\link{getTagsLocal}},
  \code{\link{loadFromLocalRepo}}, \code{\link{md5hash}},
  \code{\link{rmFromRepo}}, \code{\link{saveToRepo}},
  \code{\link{searchInLocalRepo}},
  \code{\link{setLocalRepo}},
  \code{\link{shinySearchInLocalRepo}},
  \code{\link{showLocalRepo}},
  \code{\link{summaryLocalRepo}},
  \code{\link{zipLocalRepo}}
}

