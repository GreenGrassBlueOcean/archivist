% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createMDGallery.R
\name{createGithubMDGallery}
\alias{createGithubMDGallery}
\title{Create the Summary for Each Artifact in a Markdown Format}
\usage{
createGithubMDGallery(output, repo = NULL, user = NULL,
  repoDirGit = FALSE, branch = "master", addTags = FALSE,
  addMiniature = FALSE)
}
\arguments{
\item{output}{A name of the file in which artifacts should be summarized.}

\item{repo}{A character containing a name of the Github repository on which the Repository is stored.
By default set to \code{NULL} - see \code{Note}.}

\item{user}{A character containing a name of the Github user on whose account the \code{repo} is created.
By default set to \code{NULL} - see \code{Note}.}

\item{repoDirGit}{A character containing a name of a directory on the Github repository 
on which the Repository is stored. If the Repository is stored in the main folder of the Github repository, this should be set 
to \code{repoDirGit = FALSE} as default.}

\item{branch}{A character containing a name of 
the Github Repository's branch on which the Repository is stored. Default \code{branch} is \code{master}.}

\item{addTags}{Logical, whether to add artfiact's \link{Tags} to the \code{output}.}

\item{addMiniature}{Logical, whether to add artfiact's \code{miniature/plots} to the \code{output}.}
}
\description{
\code{createGithubMDGallery} creates a summary for each artifact from \link{Repository} stored on a GitHub.
For each artifact tihd function creates a markdown file with: the download link, artifact's \link{Tags} (when \code{addTags = TRUE}) and
miniature (\code{addMiniature = TRUE}) if the artifact was archived with it's miniature and \code{Tags}. The miniature is a \link{print}
 or \link{head} over an artifact or it's \code{png} when it was a plot. But this function only supports \code{png} miniatures.
}
\details{
To learn more about artifacts visit \link[archivist]{archivist-package}.
}
\note{
#' If \code{repo} and \code{user} are set to \code{NULL} (as default) in the Github mode then global parameters
set in \link{setGithubRepo} (or via \link{aoptions}) function are used.
}
\examples{
\dontrun{

createGithubMDGallery(user = 'MarcinKosinski', repo = 'Museum',
 'README_test7.md', addTags = TRUE)
createGithubMDGallery('graphGallery', 'pbiecek', addMiniature = TRUE,
 'README_test7.md', addTags = TRUE)

}

}
\author{
Marcin Kosinski, \email{m.p.kosinski@gmail.com}
}
\seealso{
Markdown example: \url{https://github.com/pbiecek/archivist/issues/144#issuecomment-174192366}

Other archivist: \code{\link{Repository}},
  \code{\link{Tags}}, \code{\link{\%a\%}},
  \code{\link{addTagsRepo}}, \code{\link{ahistory}},
  \code{\link{alink}}, \code{\link{aoptions}},
  \code{\link{archive}},
  \code{\link{archivist-github-integration}},
  \code{\link{archivist-package}}, \code{\link{aread}},
  \code{\link{asearch}}, \code{\link{cache}},
  \code{\link{cloneGithubRepo}},
  \code{\link{copyLocalRepo}},
  \code{\link{createEmptyRepo}}, \code{\link{deleteRepo}},
  \code{\link{getTagsLocal}},
  \code{\link{loadFromLocalRepo}}, \code{\link{md5hash}},
  \code{\link{rmFromRepo}}, \code{\link{saveToRepo}},
  \code{\link{searchInLocalRepo}},
  \code{\link{setLocalRepo}},
  \code{\link{shinySearchInLocalRepo}},
  \code{\link{showLocalRepo}},
  \code{\link{splitTagsLocal}},
  \code{\link{summaryLocalRepo}},
  \code{\link{zipLocalRepo}}
}

