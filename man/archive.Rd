% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/archive.R
\name{archive}
\alias{archive}
\title{Archive Artifact to Local and Github Repository}
\usage{
archive(artifact, commitMessage = aoptions("commitMessage"),
  repo = aoptions("repo"), github_token = aoptions("github_token"),
  user.name = aoptions("user.name"),
  user.password = aoptions("user.password"),
  response = aoptions("response"))
}
\arguments{
\item{artifact}{An artifact to be archived on Local and Github \link{Repository}.}

\item{commitMessage}{A character denoting a message added to the commit while archiving \code{artifact} on GitHub Repository.
By default, an artifact's \link{md5hash} is added to the commit message.}

\item{repo}{A character denoting GitHub repository name.}

\item{github_token}{An OAuth GitHub Token created with the \link{oauth2.0_token} function. See \link{archivist-github-integration}.
Can be set globally with \code{aoptions("github_token", github_token)}.}

\item{user.name}{A character denoting GitHub user name. Can be set globally with \code{aoptions("user.name", user.name)}.
See \link{archivist-github-integration}.}

\item{user.password}{A character denoting GitHub user password. Can be set globally with \code{aoptions("user.password", user.password)}.
See \link{archivist-github-integration}.}

\item{response}{A logical value. Should the GitHub API response should be returned.}
}
\description{
\code{archive}

More archivist functionalities that integrate archivist and GitHub API can be found here \link{archivist-github-integration}.
}
\examples{
\dontrun{

## Empty Github Repository Creation
library(httr)
myapp <- oauth_app("github",
                   key = app_key,
                   secret = app_secret)
github_token <- oauth2.0_token(oauth_endpoints("github"),
                                myapp,
                                scope = "public_repo")
aoptions("github_token", github_token)
aoptions("user.name", user.name)
aoptions("user.password", user.password)

createEmptyGithubRepo("Museum")
setGithubRepo(aoptions("user.name"), "Museum")
## artifact's archiving

data(iris)
archive(iris) -> md5hash_path

## proof that artifact is really archived
showGithubRepo() # uses options from setGithubRepo
# let's remove iris
rm(iris)
# and load it back from md5hash_path
aread(md5hash_path)

}
}
\author{
Marcin Kosinski, \email{m.p.kosinski@gmail.com}
}
\seealso{
Other archivist: \code{\link{Repository}},
  \code{\link{Tags}}, \code{\link{\%a\%}},
  \code{\link{addTagsRepo}}, \code{\link{ahistory}},
  \code{\link{aoptions}},
  \code{\link{archivist-github-integration}},
  \code{\link{archivist-package}}, \code{\link{aread}},
  \code{\link{asearch}}, \code{\link{cache}},
  \code{\link{cloneGithubRepo}},
  \code{\link{copyLocalRepo}},
  \code{\link{createEmptyRepo}}, \code{\link{deleteRepo}},
  \code{\link{getTagsLocal}},
  \code{\link{loadFromLocalRepo}}, \code{\link{md5hash}},
  \code{\link{rmFromRepo}}, \code{\link{saveToRepo}},
  \code{\link{searchInLocalRepo}},
  \code{\link{setLocalRepo}},
  \code{\link{shinySearchInLocalRepo}},
  \code{\link{showLocalRepo}},
  \code{\link{summaryLocalRepo}},
  \code{\link{zipLocalRepo}}
}

