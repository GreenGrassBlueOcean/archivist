{
    "collab_server" : "",
    "contents" : "##    archivist package for R\n##\n#' @title Shiny Based Live Search for an Artifact in a Repository Using Tags \n#'\n#' @description\n#' \\code{shinySearchInLocalRepo} searches for an artifact in a \\link{Repository} using \\link{Tags}.\n#' To create an application one needs to point the name of artifacts' repository.\n#' The application is generated on the run. As for now there are two controllers exposed. \n#' A text input field and a slider. Tags that are typed into text field are used for searching in repository. \n#' Objects that have the same Tags are presented on the right panel.\n#' These object might be also downloaded just by click.\n#' To learn more about artifacts visit \\link[archivist]{archivist-package}.\n#' \n#' @details\n#' \\code{shinySearchInLocalRepo} searches for artifacts in a Repository using their \\code{Tags} \n#' (e.g., \\code{name}, \\code{class} or \\code{archiving date}). \\code{Tags} are submitted in a \n#' text input in a shiny application. Many Tags may be specified, they should be comma separated. \n#' User can specify more Tags like phase, project, author etc. when artifact is created.\n#' \n#' In the search query one can add Tags starting with \\code{sort:} or \\code{sort:-}.\n#' As a result, miniatures will be sorted appropriately.\n#' For example \\code{sort:class} will sort \\code{class} Tags, while \\code{sort:-class} will\n#' sort \\code{class} tags backwards. \\code{sort:createdDate} will sort \\code{createdDate} Tag and\n#' \\code{sort:-createdDate} will sort \\code{createdDate} Tag backwards.\n#' \n#' \\code{Tags}, submitted in the text field, should be given according to the \n#' format: \\code{\"TagKey:TagValue\"} - see examples.\n#'   \n#' @return\n#' \\code{shinySearchInLocalRepo} runs a shiny application.\n#' \n#' @param repoDir A character denoting an existing directory in which artifacts will be searched.\n#' If set to \\code{NULL} (by default), uses the \\code{repoDir} specified in \\link{setLocalRepo}.\n#' \n#' @param host A host IP adress, see the \\code{host} argument in \\code{shiny::runApp}.\n#' \n#' @author\n#' Przemyslaw Biecek, \\email{przemyslaw.biecek@@gmail.com}\n#'\n#' @section shiny:\n#'\n#' This function use tools from the fantastic \\pkg{shiny}\n#' package, so you'll need to make sure to have it installed.\n#'\n#' @examples\n#' \\dontrun{\n#'   # assuming that there is a 'repo' dir with a valid archivist repository\n#'   shinySearchInLocalRepo( repoDir = 'repo' )\n#' }\n#' @family archivist\n#' @rdname shinySearchInRepo\n#' @export\nshinySearchInLocalRepo <- function( repoDir=NULL, host = '0.0.0.0' ){\n  if (!requireNamespace(\"shiny\", quietly = TRUE)) {\n    stop(\"shiny package required for shinySearchInLocalRepo function\")\n  }\n  stopifnot( ( is.character( repoDir ) & length( repoDir ) == 1 ) | is.null( repoDir ) )\n\n  shiny::runApp(list(\n    ui = shiny::shinyUI(shiny::fluidPage(\n      shiny::tags$head(\n        shiny::tags$style(shiny::HTML(\"div.span4 {\n                        width: 300px!important;\n}\"))),\n    \n      shiny::titlePanel(paste0(\"Live search in the \",repoDir)),\n      shiny::sidebarLayout(\n        shiny::sidebarPanel(\n          shiny::textInput(\"search\",\"Comma separated tags\",value = \"class:ggplot\"),\n          shiny::sliderInput(\"width\", \"Image width\", min=100, max=800, value=400)),\n        shiny::mainPanel(\n          shiny::uiOutput(\"plot\")\n        )\n      )\n        )),\n    server = function(input, output) {\n      output$plot <- shiny::renderUI({ \n        tags <- strsplit(input$search, split=\" *, *\")[[1]]\n        sortTags <- grep(tags, pattern=\"^sort:\")\n        # Tags with sort: key should be removed from search\n        if (length(sortTags) > 0) {\n          md5s <- multiSearchInLocalRepo( tags[-sortTags], repoDir, fixed = FALSE, intersect = TRUE )\n        } else {\n          md5s <- multiSearchInLocalRepo( tags, repoDir, fixed = FALSE, intersect = TRUE )\n        }\n        # should we sort results\n        if (length(sortTags) > 0 & length(md5s) > 0) {\n          allTags <- showLocalRepo(repoDir, method = \"tags\")\n          selectedTags <- allTags[allTags$artifact %in% md5s,]\n          if (tags[sortTags[1]] == \"sort:createdDate\") {\n            md5s <- unique(selectedTags$artifact[order(selectedTags$createdDate)])\n          } else {\n            if (tags[sortTags[1]] == \"sort:-createdDate\") {\n              md5s <- unique(selectedTags$artifact[order(selectedTags$createdDate, decreasing = TRUE)])\n            } else {\n              # if there is - before sort condition\n              key <- substr(tags[sortTags[1]], 6, 1000)\n              if (substr(key, 1, 1) == \"-\") {\n                tmpTags <- selectedTags[grep(selectedTags$tag,pattern = substr(key, 2, 1000)),,drop=FALSE]\n                md5s <- unique(tmpTags[order(tmpTags$tag, na.last = TRUE),\"artifact\"])\n              } else {\n                tmpTags <- selectedTags[grep(selectedTags$tag,pattern = key),,drop=FALSE]\n                md5s <- unique(tmpTags[order(tmpTags$tag),\"artifact\"])\n              }\n            }\n          }\n        }\n        \n        shiny::addResourcePath(\n          prefix=\"repo\", \n          # if it's absolute path, do not add anything\n          directoryPath=ifelse(substr(repoDir,1,1) == \"/\",\n                               repoDir,\n                               paste0(getwd(),\"/\",repoDir))\n          )\n        \n        res <- \"\"\n        if (length(md5s) > 0) {\n          res <-  paste(\n            paste0(\"<a href='repo/gallery/\", md5s, \".rda'><img width=\",input$width,\" src='repo/gallery/\", md5s, \".png'/></a>\"), \n            collapse=\"\")\n        } \n        \n        shiny::HTML(res)\n      })\n    }\n  ), host = host)\n  \n}\n",
    "created" : 1455227257699.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3649876171",
    "id" : "6ABAFE00",
    "lastKnownWriteTime" : 1455204238,
    "last_content_update" : 0,
    "path" : "~/test1/archivist/R/shinySearchInLocalRepo.R",
    "project_path" : "R/shinySearchInLocalRepo.R",
    "properties" : {
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}